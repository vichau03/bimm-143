---
title: "Class 10: Structural Bioinformatics Pt.1"
author: Vivian Chau (A16913056)
format: html
toc: TRUE
---

## The PDB database 

The main repository of biomolecular structure data is called the PDB found at: https://www.rcsb.org

Let's see what this database contains. 
PDB > Analyze > PDB Statistics > By Exp method and molecular type (download CSV file)

```{r}
pdbstats <- read.csv("Data Export Summary.csv")
pdbstats
```

>Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
pdbstats$X.ray
```
The comma in these numbers is causing them to be read as character rather than numeric. I can fix this by replacing "," for nothing "" with the `sub()` function: 

```{r}
x <- pdbstats$X.ray
as.numeric(sub(",","",x))
```

Or I can use the **readr** package and the `read_csv()` function. 

```{r}
library(readr)
pdbstats <- read_csv ("Data Export Summary.csv")
pdbstats
```

I want to clean the column names so that they are all lower case and don't have spaces in them.

```{r}
colnames(pdbstats)
```

```{r}
library(janitor)
df<-clean_names(pdbstats)
df
```

```{r}
sum(df$x_ray)
```

Total number of structures:

```{r}
sum(df$total)
```
Percent of X-ray structures:

```{r}
sum(df$x_ray)/sum(df$total)*100
```

```{r}
sum(df$em)
```
Percent of EM structures: 

```{r}
sum(df$em)/sum(df$total)*100
```

>Q2: What proportion of structures in the PDB are protein?

```{r}
199236/sum(df$total)*100
```

> Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?
26, 725

## Using Mol*

The main Mol* homepage at: https://molstar.org/viewer/ 
We can input our own PDB files or just give it a PDB database accession code (4 letter PDB code).

![Molecular overview of 1HSG](1HSG.png)

![Surface representation showing ligand binding](1HSGMolecularSurface.png)

![Binding site of HOH 308](1HSGwater.png)

> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?
Using the ball-and-stick model, the oxygen is shown in greater detail, while the hydrogen atoms are represented smaller.

> Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have?
This water molecule is found in residue 308. 

> Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

![HIV-1 Protease](1HSGProtease.png)

## Introduction to Bio3D in R

We can use the **bio3d** package for structural bioinformatics to read PDB data into R

```{r}
library(bio3d)

pdb <-read.pdb("1hsg")
pdb
```

> Q7: How many amino acid residues are there in this pdb object? 
There are 198 amino acid residues in this pdb object.

> Q8: Name one of the two non-protein residues? 
MK1

> Q9: How many protein chains are in this structure? 
2 chains; A and B

Looking at the `pdb` object in more detail 

```{r}
attributes(pdb)
```

```{r}
head(pdb$atom)
```

Let's try a new function not yet in the bio3d package: 
It requires the **r3dmol** and **shiny** packages that we need to install. 

```{r}
library(r3dmol)
library(shiny)

source("https://tinyurl.com/viewpdb")
view.pdb(pdb, backgroundColor="pink")
```

## Predicting functional dynamics

We can use the `nma()` function in bio3d to predict the large-scale functional motions of biomolecules. 

```{r}
adk <- read.pdb("6s36")
adk
```

```{r}
m <-nma(adk)
plot(m)
```

Write out a trajectory of the predicted molecular motion: 

```{r}
mktrj(m, file="adk_m7.pdb")
```

## Comparative structure analysis of Adenylate Kinase

```{r}
library(bio3d)
aa <- get.seq("1ake_A")
aa
```

```{r}
# Blast or hmmer search 
b <- blast.pdb(aa)
```

```{r}
# Plot a summary of search results
hits <- plot(b)
```

```{r}
# List out some 'top hits'
head(hits$pdb.id)
```

```{r}
hits <- NULL
hits$pdb.id <- c('1AKE_A','6S36_A','6RZE_A','3HPR_A','1E4V_A','5EJE_A','1E4Y_A','3X2S_A','6HAP_A','6HAM_A','4K46_A','3GMT_A','4PZL_A')
```

```{r}
# Download releated PDB files
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

```{r}
# Align releated PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
```

```{r}
# Vector containing PDB codes for figure axis
ids <- basename.pdb(pdbs$id)

# Draw schematic alignment
plot(pdbs, labels=ids)
```

```{r}
# Perform PCA
pc.xray <- pca(pdbs)
plot(pc.xray)
```

```{r}
# Calculate RMSD
rd <- rmsd(pdbs)

# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)

plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```

